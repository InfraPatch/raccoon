diff --git a/node_modules/next-auth/dist/server/routes/callback.js b/node_modules/next-auth/dist/server/routes/callback.js
index 63c3c23..827cae2 100644
--- a/node_modules/next-auth/dist/server/routes/callback.js
+++ b/node_modules/next-auth/dist/server/routes/callback.js
@@ -299,14 +299,26 @@ function _callback() {
         userObjectReturnedFromAuthorizeHandler = yield provider.authorize(credentials);
 
         if (!userObjectReturnedFromAuthorizeHandler) {
-          return res.status(401).redirect("".concat(baseUrl).concat(basePath, "/error?error=CredentialsSignin&provider=").concat(encodeURIComponent(provider.id)));
+          return res.status(401).json({
+            ok: false,
+            error: 'INVALID_CREDENTIALS'
+          });
         }
       } catch (error) {
         if (error instanceof Error) {
-          return res.redirect("".concat(baseUrl).concat(basePath, "/error?error=").concat(encodeURIComponent(error.message)));
+          return res.status(500).json({
+            ok: false,
+            error: 'AUTH_FAILURE',
+            details: {
+              message: error.message
+            }
+          });
         }
 
-        return res.redirect(error);
+        return res.status(500).json({
+          ok: false,
+          error: 'AUTH_FAILURE'
+        });
       }
 
       var _user2 = userObjectReturnedFromAuthorizeHandler;
@@ -319,14 +331,26 @@ function _callback() {
         var _signInCallbackResponse2 = yield callbacks.signIn(_user2, _account2, credentials);
 
         if (_signInCallbackResponse2 === false) {
-          return res.status(403).redirect("".concat(baseUrl).concat(basePath, "/error?error=AccessDenied"));
+          return res.status(403).json({
+            ok: false,
+            error: 'ACCESS_DENIED'
+          });
         }
       } catch (error) {
         if (error instanceof Error) {
-          return res.redirect("".concat(baseUrl).concat(basePath, "/error?error=").concat(encodeURIComponent(error.message)));
+          return res.status(500).json({
+            ok: false,
+            error: 'AUTH_FAILURE',
+            details: {
+              message: error.message
+            }
+          });
         }
 
-        return res.redirect(error);
+        return res.status(500).json({
+          ok: false,
+          error: 'AUTH_FAILURE'
+        });
       }
 
       var _defaultJwtPayload2 = {
@@ -352,7 +376,7 @@ function _callback() {
         user: _user2,
         account: _account2
       });
-      return res.redirect(callbackUrl || baseUrl);
+      return res.json({ ok: true, user: _user2, account: _account2 });
     }
 
     return res.status(500).end("Error: Callback for provider type ".concat(provider.type, " not supported"));
